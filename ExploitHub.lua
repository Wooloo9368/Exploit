local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("General", "Sentinel")
-- Sections
local Main = Window:NewTab("Main")
local MainSection = Main:NewSection("Main")
-- Variables
local lplr = game.Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local CurrentCamera = game.Workspace.CurrentCamera
local worldToViewportPoint = CurrentCamera.worldToViewportPoint
local TweenService = game:GetService("TweenService")

local HeadOff = Vector3.new(0,.5,0)
local TextOff = Vector3.new(0,1,0)
local LegOff = Vector3.new(0,3,0)

local ActiveFunctions = {
    ["esp"] = {},
    ["mobEsp"] = {},
}

local objs = {
    ["espBoxes"] = {},
    ["mobEspBoxes"] = {},
    ["KillAura"] = nil
}

local Settings = {
    ["esp"] = false,
    ["mobEsp"] = false,
    ["healthEsp"] = false,
    ["AutoKill"] = false,
    ["KillAura"] = false,
    ["KillAuraRange"] = 5,
}
--
function round(num)
    return math.floor(num + 0.5)
end

function boxesp(plr)
    local BoxOutLine
    local Box
    local text
    if not objs.espBoxes[plr] then
        objs.espBoxes[plr] = {}
        BoxOutLine = Drawing.new("Square")
        BoxOutLine.Visible = false
        BoxOutLine.Color = Color3.new(0,0,0)
        BoxOutLine.Thickness = 3
        BoxOutLine.Transparency = 1
        BoxOutLine.Filled = false
        
        objs.espBoxes[plr].BoxOutLine = BoxOutLine
        
        Box = Drawing.new("Square")
        Box.Visible = false
        Box.Color = Color3.new(1,1,1)
        Box.Thickness = 1
        Box.Transparency = 1
        Box.Filled = false
        
        text = Drawing.new("Text")
        text.Text = "Health"
        text.Visible = false
        text.Center = true
        text.Outline = true
        text.Font = 2
        text.Color = Color3.fromRGB(255,255,255)
        text.Size = 13
        
        objs.espBoxes[plr].Text = text
        objs.espBoxes[plr].BoxOutLine = BoxOutLine
        objs.espBoxes[plr].Box = Box
    else
        text = objs.espBoxes[plr].Text
        BoxOutLine = objs.espBoxes[plr].BoxOutLine
        Box = objs.espBoxes[plr].Box
    end
    
    local funk; funk = game:GetService("RunService").RenderStepped:Connect(function()
        if Settings.esp == true then
            local char = plr.Character
            if char ~= nil and char:FindFirstChild("Humanoid") ~= nil and char:FindFirstChild("HumanoidRootPart") ~= nil and plr ~= lplr and char.Humanoid.Health >= 0 then
                local vector, onscreen = camera:worldToViewportPoint(char.HumanoidRootPart.Position)
                
                local RootPart = char.HumanoidRootPart
                local Head = char.Head
                local RootPartPosition, RootVis = worldToViewportPoint(CurrentCamera,RootPart.Position)
                local HeadPosition = worldToViewportPoint(CurrentCamera,Head.Position + HeadOff)
                local LegPosition = worldToViewportPoint(CurrentCamera,RootPart.Position-LegOff)
                local TextPosition = CurrentCamera:WorldToViewportPoint(Head.Position + TextOff)
                
                if onscreen then
                    objs.espBoxes[plr].BoxOutLine.Size = Vector2.new(CurrentCamera.ViewportSize.X/RootPartPosition.Z,HeadPosition.Y-LegPosition.Y)
                    objs.espBoxes[plr].BoxOutLine.Position = Vector2.new(RootPartPosition.X - BoxOutLine.Size.X/2,RootPartPosition.Y-BoxOutLine.Size.Y/2)
                    objs.espBoxes[plr].BoxOutLine.Visible = true
                    
                    objs.espBoxes[plr].Box.Size = Vector2.new(CurrentCamera.ViewportSize.X/RootPartPosition.Z,HeadPosition.Y-LegPosition.Y)
                    objs.espBoxes[plr].Box.Position = Vector2.new(RootPartPosition.X - Box.Size.X/2,RootPartPosition.Y-Box.Size.Y/2)
                    objs.espBoxes[plr].Box.Visible = true
                    
                    if Settings.healthEsp == true then
                        objs.espBoxes[plr].Text.Size = CurrentCamera.ViewportSize.X/RootPartPosition.Z
                        objs.espBoxes[plr].Text.Position = Vector2.new(TextPosition.X,TextPosition.Y)
                        objs.espBoxes[plr].Text.Visible = true
                        local roundedNumber = round(char.Humanoid.Health)
                        objs.espBoxes[plr].Text.Text = tostring(roundedNumber)
                        
                    end
                else
                    objs.espBoxes[plr].BoxOutLine.Visible = false
                    objs.espBoxes[plr].Box.Visible = false
                    objs.espBoxes[plr].Text.Visible = false
                end
            else
                objs.espBoxes[plr].BoxOutLine.Visible = false
                objs.espBoxes[plr].Box.Visible = false
                objs.espBoxes[plr].Text.Visible = false
            end
        else
            objs.espBoxes[plr].BoxOutLine.Visible = false
            objs.espBoxes[plr].Box.Visible = false
            objs.espBoxes[plr].Text.Visible = false
        end
    end)
    
    local funk2; funk2 = game.Players.PlayerRemoving:Connect(function(Leavingplr)
        if Leavingplr == plr then
            objs.espBoxes[plr].BoxOutLine.Visible = false
            objs.espBoxes[plr].Box.Visible = false
            objs.espBoxes[plr].Text.Visible = false
            funk:Disconnect()
            funk2:Disconnect()
            table.remove(ActiveFunctions.esp,table.find(ActiveFunctions.esp,funk)) 
            table.remove(ActiveFunctions.esp,table.find(ActiveFunctions.esp,funk2)) 
        end
    end)
    table.insert(ActiveFunctions.esp,funk)
    table.insert(ActiveFunctions.esp,funk2) 
end

function mobesp(mob) 
    local BoxOutLine
    local Box
    local text
    if not objs.espBoxes[mob] then
        objs.espBoxes[mob] = {}
        BoxOutLine = Drawing.new("Square")
        BoxOutLine.Visible = false
        BoxOutLine.Color = Color3.new(0,0,0)
        BoxOutLine.Thickness = 3
        BoxOutLine.Transparency = 1
        BoxOutLine.Filled = false
        
        objs.espBoxes[mob].BoxOutLine = BoxOutLine
        
        Box = Drawing.new("Square")
        Box.Visible = false
        Box.Color = Color3.new(1,1,1)
        Box.Thickness = 1
        Box.Transparency = 1
        Box.Filled = false
        
        text = Drawing.new("Text")
        text.Text = "Health"
        text.Visible = false
        text.Center = true
        text.Outline = true
        text.Font = 2
        text.Color = Color3.fromRGB(255,255,255)
        text.Size = 13
        
        objs.espBoxes[mob].Text = text
        objs.espBoxes[mob].BoxOutLine = BoxOutLine
        objs.espBoxes[mob].Box = Box
    else
        text = objs.espBoxes[mob].Text
        BoxOutLine = objs.espBoxes[mob].BoxOutLine
        Box = objs.espBoxes[mob].Box
    end
    
    
    
    local funk; funk = game:GetService("RunService").RenderStepped:Connect(function()
        if Settings.mobEsp == true then
            local char = mob
            if char ~= nil and char:FindFirstChild("Humanoid") ~= nil and char:FindFirstChild("HumanoidRootPart") ~= nil and plr ~= lplr and char.Humanoid.Health >= 0 then
                
                local vector, onscreen = camera:worldToViewportPoint(char.HumanoidRootPart.Position)
                local RootPart = char.HumanoidRootPart
                local RootPartPosition, RootVis = worldToViewportPoint(CurrentCamera,RootPart.Position)
                local HeadPosition = worldToViewportPoint(CurrentCamera,RootPart.Position + HeadOff)
                local LegPosition = worldToViewportPoint(CurrentCamera,RootPart.Position-LegOff)
                local TextPosition = CurrentCamera:WorldToViewportPoint(RootPart.Position + TextOff)
                print("Test1")
                if onscreen then
                    objs.espBoxes[mob].BoxOutLine.Size = Vector2.new(CurrentCamera.ViewportSize.X/RootPartPosition.Z,HeadPosition.Y-LegPosition.Y)
                    objs.espBoxes[mob].BoxOutLine.Position = Vector2.new(RootPartPosition.X - BoxOutLine.Size.X/2,RootPartPosition.Y-BoxOutLine.Size.Y/2)
                    objs.espBoxes[mob].BoxOutLine.Visible = true
                    
                    objs.espBoxes[mob].Box.Size = Vector2.new(CurrentCamera.ViewportSize.X/RootPartPosition.Z,HeadPosition.Y-LegPosition.Y)
                    objs.espBoxes[mob].Box.Position = Vector2.new(RootPartPosition.X - Box.Size.X/2,RootPartPosition.Y-Box.Size.Y/2)
                    objs.espBoxes[mob].Box.Visible = true
                    
                    if Settings.healthEsp == true then
                        objs.espBoxes[mob].Text.Size = CurrentCamera.ViewportSize.X/RootPartPosition.Z
                        objs.espBoxes[mob].Text.Position = Vector2.new(TextPosition.X,TextPosition.Y)
                        objs.espBoxes[mob].Text.Visible = true
                        local roundedNumber = round(char.Humanoid.Health)
                        objs.espBoxes[mob].Text.Text = tostring(roundedNumber)
                        
                    end
                else
                    objs.espBoxes[mob].BoxOutLine.Visible = false
                    objs.espBoxes[mob].Box.Visible = false
                    objs.espBoxes[mob].Text.Visible = false
                end
            else
                objs.espBoxes[mob].BoxOutLine.Visible = false
                objs.espBoxes[mob].Box.Visible = false
                objs.espBoxes[mob].Text.Visible = false
            end
        else
            objs.espBoxes[mob].BoxOutLine.Visible = false
            objs.espBoxes[mob].Box.Visible = false
            objs.espBoxes[mob].Text.Visible = false
        end
    end)
    
    table.insert(ActiveFunctions.mobEsp,funk)
    table.insert(ActiveFunctions.mobEsp,funk2)
end

MainSection:NewToggle("Player Esp", "See players though walls", function(state)
    if state then
        Settings.esp = true
        for i , plr in pairs(game.Players:GetChildren()) do
            boxesp(plr)
        end
        
        game.Players.PlayerAdded:Connect(function(plr)
            boxesp(plr)
        end)
    else
        for i , v in pairs(ActiveFunctions.esp) do
            v:Disconnect()
        end
        Settings.esp = false
        for i , plrbox in pairs(objs.espBoxes) do
            plrbox.BoxOutLine.Visible = false
            plrbox.Box.Visible = false
            plrbox.Text.Visible = false
        end
    end
end)

MainSection:NewToggle("Health Esp", "View Health from esped humanoids",function(state)
    Settings.healthEsp = state
    if state == false then
        for i , plrbox in pairs(objs.espBoxes) do
            plrbox.Text.Visible = false
        end
    end
end)

MainSection:NewSlider("WalkSpeed", "Speed", 100, 16, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

local distance = 15

MainSection:NewKeybind("AutoKill","e",Enum.KeyCode.E,function(state)
    if Settings.AutoKill == true then print("reset") Settings.AutoKill = false
    else
        print("started")
        Settings.AutoKill = true
        local Target = lplr.Character.HumanoidRootPart
        local amt = 10
        local Targetplr = nil
        for i , plr in pairs(game.Players:GetChildren()) do
            if plr ~= lplr then
                if not plr.Character:FindFirstChildOfClass("ForceField") then
                    if plr.leaderstats.Time.Value > amt then
                        amt = plr.leaderstats.Time.Value
                        Target = plr.Character.HumanoidRootPart
                        Targetplr = plr
                    end
                end
            end
        end
       --[[ print("Targetfound")
        local bp = Instance.new("BodyPosition")
        print("SpawnedBp")
        bp.Parent = lplr.Character.HumanoidRootPart
        print("gave")
        bp.MaxForce = Vector3.new(1,1,1) * 25000
        bp.P = 30
        bp.D = 0]]
        
        local list = {}
        for i , v in pairs(lplr.Character:GetChildren()) do
            if v.ClassName == "BasePart" then
                v.CanCollide = false
                table.insert(list,v)
            end
        end
        while Settings.AutoKill == true do
            
            
            print('ok')
            local landpos = CFrame.new(lplr.Character.HumanoidRootPart.Position + ((Target.Position - lplr.Character.HumanoidRootPart.Position).Unit * distance) - Vector3.new(0,5,0))
            if (lplr.Character.HumanoidRootPart.Position - Target.Position).Magnitude <= distance then
                landpos =  CFrame.new(Vector3.new(-2,-2,3) + Target.Position ,Target.Position)
            end
            print('swag')
            --bp.Position = landpos.Position
            local Tween =  TweenService:Create(lplr.Character.HumanoidRootPart,TweenInfo.new(.2),{CFrame = landpos})
            print("Tweening")
            Tween:Play()
            
            wait(.2)
            Tween:Cancel()
            if Targetplr.leaderstats.Time.Value < 100 or Target.Parent:FindFirstChildOfClass("ForceField") then
                amt = 10
                for i , plr in pairs(game.Players:GetChildren()) do
                if plr ~= lplr then
                    if not plr.Character:FindFirstChildOfClass("ForceField") then
                        if plr.leaderstats.Time.Value > amt then
                            amt = plr.leaderstats.Time.Value
                            Target = plr.Character.HumanoidRootPart
                            Targetplr = plr
                        end
                    end
                end
            end
        end
        end
    for i , v in pairs(list) do
        v.CanCollide = true
    end
    --bp:Destroy()
    end
    --lplr.Character:MoveTo(Target - Vector3.new(0,10,0))
end)

MainSection:NewToggle("Kill Aura","e",function(state)
    if state == true then
        objs.KillAura = game:GetService("RunService").RenderStepped:Connect(function()
            lplr.Character["Anti-Autoclicker"].Disabled = true
            for i , plr in pairs (game.Players:GetPlayers()) do
                local TargetChar = plr.Character
                if TargetChar.Humanoid.Health > 0 and TargetChar:FindFirstChild("HumanoidRootPart") and (lplr.Character.HumanoidRootPart.Position - TargetChar.HumanoidRootPart.Position).Magnitude <= Settings.KillAuraRange then
                    local Tool = lplr.Character:FindFirstChildOfClass("Tool")
                    if Tool and Tool:FindFirstChild("Handle") then
                        Tool:Activate()
                        for i,v in pairs(TargetChar:GetChildren()) do
                            if v:IsA("BasePart") then
                                firetouchinterest(Tool.Handle,v,0)
                                firetouchinterest(Tool.Handle,v,1)
                            end
                        end
                    end
                end
            end
        end)
    elseif state == false then
        objs.KillAura:Disconnect()
        objs.KillAura = nil
    end
end)

MainSection:NewSlider("Kill Aura Range","Range",100,0,function(s)
    Settings.KillAuraRange = s
end)

local Bloodline = Window:NewTab("Bloodline")
local MainBloodlineSection = Bloodline:NewSection("Main")
local SpawnItemSection = Bloodline:NewSection("Spawn Item")

SpawnItemSection:NewDropdown("Collect Item","Chooses the Item you want to get", {"Pear","Mango","Life Up Fruit"},function(CurrentOption)
    print(CurrentOption)
end)

MainBloodlineSection:NewToggle("Mob Esp","See mobs though walls",function(state)
    if state then
        for i , v in pairs(game.Workspace:GetChildren()) do
            if v.Name == "Combat Instructor Clone" then
                mobesp(v)
            end
        end
        
        game.Workspace.ChildAdded:Connect(function(v)
            if v.Name == "Combat Instructor Clone" then
                mobesp(v)
            end
        end)
        
    else
        
        
    end
    
    Settings.mobEsp = state
    
end)

MainBloodlineSection:NewToggle("Auto chakra charge","Holds down the C key", function(state)
    if state then
        if iswindowactive then
            keypress(0x43)
        end
    else
        if iswindowactive then
            keyrelease(0x43)
        end
    end
end)